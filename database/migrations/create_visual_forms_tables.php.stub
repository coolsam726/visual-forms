<?php

use Coolsam\VisualForms\ControlTypes;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        // Create Visual Forms table
        Schema::create(Config::get('visual-forms.tables.visual_forms'), function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug')->unique();
            $table->text('description')->nullable();
            $table->jsonb('settings')->nullable();
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });

        Schema::create(Config::get('visual-forms.tables.visual_form_components'), function (Blueprint $table) {
            $table->id();
            $table->nestedSet();
            $table->ulid();
            $table->foreignId('form_id')->constrained(Config::get('visual-forms.tables.visual_forms'))->onDelete('cascade');
            $table->string('name');
            $table->string('label')->nullable();
            $table->text('description')->nullable();
            $table->text('helper_text')->nullable();
            $table->text('hint')->nullable();
            $table->string('component_type')->comment('The full class name of the component type to aid in making the component dynamic');
            $table->jsonb('props')->nullable();
            $table->jsonb('columns')->nullable();
            $table->jsonb('column_span')->nullable();
            $table->jsonb('column_start')->nullable();
            $table->string('state_path')->nullable();
            $table->jsonb('state_conditions')->nullable()->comment('Conditions to control the state of the component e.g hide/show, disable, readonly, required etc');
            $table->jsonb('validation_rules')->nullable();
            $table->bigInteger('sort_order')->default(0);
            $table->boolean('is_active')->default(true);
            $table->boolean('column_span_full')->default(false);
            $table->timestamps();
        });

        // Create Visual Form Entries table
        Schema::create(Config::get('visual-forms.tables.visual_form_entries'), function (Blueprint $table) {
            $table->id();
            $table->ulid()->unique();
            $table->foreignId('form_id')->constrained(Config::get('visual-forms.tables.visual_forms'))->onDelete('cascade');
            $table->json('payload');
            $table->boolean('is_processed')->default(false);
            $table->string('ip_address')->nullable();
            $table->softDeletes();
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists(Config::get('visual-forms.tables.visual_forms'));
        Schema::dropIfExists(Config::get('visual-forms.tables.visual_form_fields'));
        Schema::dropIfExists(Config::get('visual-forms.tables.visual_form_components'));
        Schema::dropIfExists(Config::get('visual-forms.tables.visual_form_entries'));
    }
};
